plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.18'
	id 'io.spring.dependency-management' version '1.1.4'
	id "com.github.node-gradle.node" version "3.1.1"
}

node {
	version = '12.22.12'
	download = true
	nodeModulesDir = file("${projectDir}/src/main/resources/static")

}
tasks.register('copyFrontLib', Copy) {
	from "${projectDir}/src/main/resources/static"
	into "${projectDir}/build/resources/main/static/."
}
copyFrontLib.dependsOn npmInstall
compileJava.dependsOn copyFrontLib

compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile).configureEach {
	options.encoding = 'UTF-8'
}

// task 등록
//tasks.register("npm-install") {
//	group = "application"
//	description = "Installs dependencies from package.json"
//	tasks.appNpmInstall.exec();
//}
//
//task appNpmInstall(type: NpmTask) {
//	description = "Installs dependencies from package.json"
//	workingDir = file("/src/main/resources/static")
//	args = ["install"]
//}

group = 'com.studyland'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '11'
}

compileJava {
	options.compilerArgs << '-parameters'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	gradlePluginPortal()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	testImplementation 'org.projectlombok:lombok:1.18.22'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
//	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'javax.mail:javax.mail-api:1.6.2'
	/* spring boot 2.3 version 이상 부터는 spring-boot-starter-web 의존성 내부에 있던 validation 이 삭제되었다.
	 sb 2.3 이상이라면 validation 의존성을 별도로 추가해 주어야 함. */
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// npm
	implementation 'com.github.node-gradle:gradle-node-plugin:3.1.1'

	// modelMapper
	implementation 'org.modelmapper:modelmapper:2.3.6'

	testImplementation 'com.tngtech.archunit:archunit-junit5:0.13.1'

	/* testcontainers */
	testImplementation 'org.testcontainers:junit-jupiter:1.19.6'
	testImplementation 'org.testcontainers:postgresql:1.17.6'
}

//tasks.named('test') {
//	useJUnitPlatform()
//}

bootRun {
	String activeProfile = System.properties['spring.profiles.active']
	systemProperty "spring.profiles.active", activeProfile
}